//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "JavaIoSerializable.h"
#import "JavaLangComparable.h"

@interface JavaLangCharacter : NSObject <JavaIoSerializable, JavaLangComparable>
{
    unsigned short value_;
}

+ (const struct J2ObjcClassInfo *)__metadata;
+ (id)__annotations_isSpaceWithChar_;
+ (id)__annotations_isJavaLetterOrDigitWithChar_;
+ (id)__annotations_isJavaLetterWithChar_;
+ (void)initialize;
+ (int)binarySearchRangeWithIntArray:(id)arg1 withInt:(int)arg2;
+ (int)toUpperCaseImplWithInt:(int)arg1;
+ (int)toUpperCaseWithInt:(int)arg1;
+ (unsigned short)toUpperCaseWithChar:(unsigned short)arg1;
+ (int)toTitleCaseWithInt:(int)arg1;
+ (unsigned short)toTitleCaseWithChar:(unsigned short)arg1;
+ (id)toStringWithChar:(unsigned short)arg1;
+ (int)toLowerCaseImplWithInt:(int)arg1;
+ (int)toLowerCaseWithInt:(int)arg1;
+ (unsigned short)toLowerCaseWithChar:(unsigned short)arg1;
+ (unsigned short)reverseBytesWithChar:(unsigned short)arg1;
+ (_Bool)isWhitespaceWithInt:(int)arg1;
+ (_Bool)isWhitespaceWithChar:(unsigned short)arg1;
+ (_Bool)isUpperCaseImplWithInt:(int)arg1;
+ (_Bool)isUpperCaseWithInt:(int)arg1;
+ (_Bool)isUpperCaseWithChar:(unsigned short)arg1;
+ (_Bool)isUnicodeIdentifierStartWithInt:(int)arg1;
+ (_Bool)isUnicodeIdentifierStartWithChar:(unsigned short)arg1;
+ (_Bool)isUnicodeIdentifierPartWithInt:(int)arg1;
+ (_Bool)isUnicodeIdentifierPartWithChar:(unsigned short)arg1;
+ (_Bool)isTitleCaseWithInt:(int)arg1;
+ (_Bool)isTitleCaseWithChar:(unsigned short)arg1;
+ (_Bool)isSpaceCharWithInt:(int)arg1;
+ (_Bool)isSpaceCharWithChar:(unsigned short)arg1;
+ (_Bool)isSpaceWithChar:(unsigned short)arg1;
+ (_Bool)isLowerCaseImplWithInt:(int)arg1;
+ (_Bool)isLowerCaseWithInt:(int)arg1;
+ (_Bool)isLowerCaseWithChar:(unsigned short)arg1;
+ (_Bool)isLetterOrDigitImplWithInt:(int)arg1;
+ (_Bool)isLetterOrDigitWithInt:(int)arg1;
+ (_Bool)isLetterOrDigitWithChar:(unsigned short)arg1;
+ (_Bool)isLetterImplWithInt:(int)arg1;
+ (_Bool)isLetterWithInt:(int)arg1;
+ (_Bool)isLetterWithChar:(unsigned short)arg1;
+ (_Bool)isJavaLetterOrDigitWithChar:(unsigned short)arg1;
+ (_Bool)isJavaLetterWithChar:(unsigned short)arg1;
+ (_Bool)isJavaIdentifierStartWithInt:(int)arg1;
+ (_Bool)isJavaIdentifierStartWithChar:(unsigned short)arg1;
+ (_Bool)isJavaIdentifierPartWithInt:(int)arg1;
+ (_Bool)isJavaIdentifierPartWithChar:(unsigned short)arg1;
+ (_Bool)isISOControlWithInt:(int)arg1;
+ (_Bool)isISOControlWithChar:(unsigned short)arg1;
+ (_Bool)isIdentifierIgnorableWithInt:(int)arg1;
+ (_Bool)isIdeographicWithInt:(int)arg1;
+ (_Bool)isIdentifierIgnorableWithChar:(unsigned short)arg1;
+ (_Bool)isDigitWithInt:(int)arg1;
+ (_Bool)isDigitWithChar:(unsigned short)arg1;
+ (_Bool)isDefinedWithInt:(int)arg1;
+ (_Bool)isDefinedWithChar:(unsigned short)arg1;
+ (_Bool)isBmpCodePointWithInt:(int)arg1;
+ (_Bool)isAlphabeticWithInt:(int)arg1;
+ (unsigned short)lowSurrogateWithInt:(int)arg1;
+ (unsigned short)highSurrogateWithInt:(int)arg1;
+ (_Bool)isMirroredWithInt:(int)arg1;
+ (_Bool)isMirroredWithChar:(unsigned short)arg1;
+ (BOOL)getDirectionalityWithInt:(int)arg1;
+ (BOOL)getDirectionalityWithChar:(unsigned short)arg1;
+ (int)getTypeWithInt:(int)arg1;
+ (int)getTypeWithChar:(unsigned short)arg1;
+ (int)getNumericValueWithInt:(int)arg1;
+ (int)getNumericValueWithChar:(unsigned short)arg1;
+ (id)getNameImplWithInt:(int)arg1;
+ (id)getNameWithInt:(int)arg1;
+ (unsigned short)forDigitWithInt:(int)arg1 withInt:(int)arg2;
+ (int)digitWithInt:(int)arg1 withInt:(int)arg2;
+ (int)digitWithChar:(unsigned short)arg1 withInt:(int)arg2;
+ (int)offsetByCodePointsWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3 withInt:(int)arg4 withInt:(int)arg5;
+ (int)offsetByCodePointsWithJavaLangCharSequence:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)codePointCountWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)codePointCountWithJavaLangCharSequence:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (id)toCharsWithInt:(int)arg1;
+ (int)toCharsWithInt:(int)arg1 withCharArray:(id)arg2 withInt:(int)arg3;
+ (int)codePointBeforeWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)codePointBeforeWithCharArray:(id)arg1 withInt:(int)arg2;
+ (int)codePointBeforeWithJavaLangCharSequence:(id)arg1 withInt:(int)arg2;
+ (int)codePointAtWithCharArray:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)codePointAtWithCharArray:(id)arg1 withInt:(int)arg2;
+ (int)codePointAtWithJavaLangCharSequence:(id)arg1 withInt:(int)arg2;
+ (int)toCodePointWithChar:(unsigned short)arg1 withChar:(unsigned short)arg2;
+ (int)charCountWithInt:(int)arg1;
+ (_Bool)isSurrogatePairWithChar:(unsigned short)arg1 withChar:(unsigned short)arg2;
+ (_Bool)isSurrogateWithChar:(unsigned short)arg1;
+ (_Bool)isLowSurrogateWithChar:(unsigned short)arg1;
+ (_Bool)isHighSurrogateWithChar:(unsigned short)arg1;
+ (_Bool)isSupplementaryCodePointWithInt:(int)arg1;
+ (_Bool)isValidCodePointWithInt:(int)arg1;
+ (id)valueOfWithChar:(unsigned short)arg1;
+ (int)compareWithChar:(unsigned short)arg1 withChar:(unsigned short)arg2;
+ (void)checkValidCodePointWithInt:(int)arg1;
+ (id)memDebugStaticReferences;
- (id)memDebugStrongReferences;
- (void)copyAllFieldsTo:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (int)compareToWithId:(id)arg1;
- (unsigned short)charValue;
- (id)initWithChar:(unsigned short)arg1;

@end

