//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

@class GesturePasswordThemeObject, NSMutableArray, NSString;

@interface GesturePasswordView : UIView
{
    _Bool _isDuplicate;
    id <GesturePasswordViewDelegate> _delegate;
    double _circleRadius;
    GesturePasswordThemeObject *_currentBtnTheme;
    unsigned long long _numberOfGestureCircles;
    unsigned long long _GestureCirclesPerRow;
    unsigned long long _passwordMinLength;
    unsigned long long _passwordMaxLength;
    NSString *_sPassword;
    NSMutableArray *_selectedButtons;
    NSMutableArray *_allButtons;
    GesturePasswordThemeObject *_normalBtnTheme;
    GesturePasswordThemeObject *_selectBtnTheme;
    GesturePasswordThemeObject *_inCorrectBtnTheme;
    struct CGPoint _currentPoint;
}

@property(retain, nonatomic) GesturePasswordThemeObject *inCorrectBtnTheme; // @synthesize inCorrectBtnTheme=_inCorrectBtnTheme;
@property(retain, nonatomic) GesturePasswordThemeObject *selectBtnTheme; // @synthesize selectBtnTheme=_selectBtnTheme;
@property(retain, nonatomic) GesturePasswordThemeObject *normalBtnTheme; // @synthesize normalBtnTheme=_normalBtnTheme;
@property(retain, nonatomic) NSMutableArray *allButtons; // @synthesize allButtons=_allButtons;
@property(retain, nonatomic) NSMutableArray *selectedButtons; // @synthesize selectedButtons=_selectedButtons;
@property(nonatomic) struct CGPoint currentPoint; // @synthesize currentPoint=_currentPoint;
@property(copy, nonatomic) NSString *sPassword; // @synthesize sPassword=_sPassword;
@property(nonatomic) unsigned long long passwordMaxLength; // @synthesize passwordMaxLength=_passwordMaxLength;
@property(nonatomic) unsigned long long passwordMinLength; // @synthesize passwordMinLength=_passwordMinLength;
@property(nonatomic) _Bool isDuplicate; // @synthesize isDuplicate=_isDuplicate;
@property(nonatomic) unsigned long long GestureCirclesPerRow; // @synthesize GestureCirclesPerRow=_GestureCirclesPerRow;
@property(nonatomic) unsigned long long numberOfGestureCircles; // @synthesize numberOfGestureCircles=_numberOfGestureCircles;
@property(retain, nonatomic) GesturePasswordThemeObject *currentBtnTheme; // @synthesize currentBtnTheme=_currentBtnTheme;
@property(nonatomic) double circleRadius; // @synthesize circleRadius=_circleRadius;
@property(nonatomic) id <GesturePasswordViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)settingGesturePasswordButtomThemeWithStatus:(long long)arg1 withBorderWidth:(double)arg2 withBorderColor:(id)arg3 withFillColor:(id)arg4 withShowCenterPoint:(_Bool)arg5 withFillCenterPoint:(_Bool)arg6 withCenterPointColor:(id)arg7 withCenterPointRadius:(double)arg8;
- (void)settingGesturePasswordLineThemeWithStatus:(long long)arg1 withLineWidth:(double)arg2 withLineColor:(id)arg3;
- (void)resetPassword;
- (void)setGesturePassword:(id)arg1;
- (void)settingGesturePasswordIsDuplicate:(_Bool)arg1 withMinPasswordLength:(long long)arg2 withMaxPasswordLength:(long long)arg3;
- (void)setPropertiesByStatus:(long long)arg1;
- (void)lockStatus:(id)arg1;
- (void)resetButtons;
- (id)buttonContainsThePoint:(struct CGPoint)arg1;
- (void)initSetDefaultValue;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 withNumberOfCircle:(long long)arg2 withDelegate:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

