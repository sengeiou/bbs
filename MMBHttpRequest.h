//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableData, NSMutableURLRequest, NSObject<MMBHttpRequestDelegate><NSObject>, NSString, NSTimer, NSURLConnection;

@interface MMBHttpRequest : NSObject
{
    NSObject<MMBHttpRequestDelegate><NSObject> *httpRequestDelegate;
    NSString *sRequestBody;
    NSMutableData *mtdaReceiveData;
    NSMutableURLRequest *mtuURLRequest;
    NSURLConnection *urlConnection;
    double timeoutInterval;
    NSTimer *timerTimeout;
    NSString *sSessionID;
    NSString *sSoapAction;
    long long iHTTPStatusCode;
    _Bool isPost;
    _Bool isDefaultAlertForError;
    _Bool isAsynchronous;
    _Bool isSendJESSIONID;
}

@property(nonatomic) _Bool isSendJESSIONID; // @synthesize isSendJESSIONID;
@property(nonatomic) _Bool isAsynchronous; // @synthesize isAsynchronous;
@property(nonatomic) _Bool isDefaultAlertForError; // @synthesize isDefaultAlertForError;
@property(nonatomic) _Bool isPost; // @synthesize isPost;
@property(nonatomic) long long iHTTPStatusCode; // @synthesize iHTTPStatusCode;
@property(retain, nonatomic) NSString *sSoapAction; // @synthesize sSoapAction;
@property(retain, nonatomic) NSString *sSessionID; // @synthesize sSessionID;
@property(retain, nonatomic) NSTimer *timerTimeout; // @synthesize timerTimeout;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval;
@property(retain, nonatomic) NSURLConnection *urlConnection; // @synthesize urlConnection;
@property(retain, nonatomic) NSMutableURLRequest *mtuURLRequest; // @synthesize mtuURLRequest;
@property(retain, nonatomic) NSMutableData *mtdaReceiveData; // @synthesize mtdaReceiveData;
@property(retain, nonatomic) NSString *sRequestBody; // @synthesize sRequestBody;
@property(retain, nonatomic) NSObject<MMBHttpRequestDelegate><NSObject> *httpRequestDelegate; // @synthesize httpRequestDelegate;
- (void)startRequest;
- (id)initWithContentOfURL:(id)arg1;
- (void)checkTimeout;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)dealloc;

@end

